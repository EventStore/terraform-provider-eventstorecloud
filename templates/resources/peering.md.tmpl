---
page_title: "Resource eventstorecloud_peering - terraform-provider-eventstorecloud"
subcategory: ""
description: |-
  Manages peering connections between Event Store Cloud VPCs and customer own VPCs
---

{{/* This template serves as a starting point for documentation generation, and can be customized with hardcoded values and/or doc gen templates.

For example, the {{ .SchemaMarkdown }} template can be used to replace manual schema documentation if descriptions of schema attributes are added in the provider source code. */ -}}

# Resource (eventstorecloud_peering)

Manages peering connections between Event Store Cloud VPCs and customer own VPCs

## Example Usage

{{tffile "examples/resources/peering/example_1.tf"}}

<!-- schema generated by tfplugindocs -->

## Schema

### Required

- **name** (String) Human-friendly name for the network
- **network_id** (String) Network ID
- **peer_account_id** (String) Account identifier in which to the peer network exists
- **peer_network_id** (String) Network identifier of the peer network exists
- **peer_network_region** (String) Provider region in which to the peer network exists
- **peer_resource_provider** (String) Cloud Provider in which the target network exists
- **project_id** (String) Project ID
- **routes** (Set of String) Routes to create from the Event Store network to the peer network

### Optional

- **id** (String) The ID of this resource.

### Read-Only

- **provider_metadata** (Map of String) Metadata about the remote end of the peering connection

The `provider_metadata` block supports:

* **aws_peering_link_id** (String) AWS Peering link ID for the peering. Empty if the peering Provider is not AWS.
* **gcp_project_id** (String) GCP Project ID for the peering. Empty if the peering Provider is not GCP.
* **gcp_network_name** (String) GCP Network Name for the peering. Empty if the peering Provider is not GCP.
* **gcp_network_id** (String) GCP Network ID in URL format. Can be passed to google_compute_network_peering resources. Empty if the peering Provider is not GCP.

## Import

Import is supported using the following syntax:

```shell
terraform import eventstorecloud_peering.example project_id:peering_id
```

~> Keep in mind that additional operations might be required to activate the peering link. Check our [provisioning guidelines](https://developers.eventstore.com/cloud/provision/) for each of the supported cloud providers to know more.
